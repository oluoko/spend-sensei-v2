// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  clerkUserId String    @unique
  email       String    @unique
  firstName        String?
lastName        String?
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  budgets     Budgets[]
  incomes     Income[]
  expenses    Expense[]
}

model Budgets {
  id     String  @id @default(uuid())
  name   String
  amount Float
  icon   String?
  userId String
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expenses Expense[]

  @@index([userId])
}

model Income {
  id     String  @id @default(uuid())
  name   String
  amount Float
  icon   String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Expense {
  id       String   @id @default(uuid())
  name     String
  amount   Float
  budgetId String
  budgets  Budgets? @relation(fields: [budgetId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
